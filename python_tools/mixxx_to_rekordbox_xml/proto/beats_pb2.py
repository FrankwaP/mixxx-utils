# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: beats.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0b\x62\x65\x61ts.proto\x12\x0emixxx.track.io\"g\n\x04\x42\x65\x61t\x12\x16\n\x0e\x66rame_position\x18\x01 \x01(\x05\x12\x15\n\x07\x65nabled\x18\x02 \x01(\x08:\x04true\x12\x30\n\x06source\x18\x03 \x01(\x0e\x32\x16.mixxx.track.io.Source:\x08\x41NALYZER\"D\n\x03\x42pm\x12\x0b\n\x03\x62pm\x18\x01 \x01(\x01\x12\x30\n\x06source\x18\x02 \x01(\x0e\x32\x16.mixxx.track.io.Source:\x08\x41NALYZER\"-\n\x07\x42\x65\x61tMap\x12\"\n\x04\x62\x65\x61t\x18\x01 \x03(\x0b\x32\x14.mixxx.track.io.Beat\"V\n\x08\x42\x65\x61tGrid\x12 \n\x03\x62pm\x18\x01 \x01(\x0b\x32\x13.mixxx.track.io.Bpm\x12(\n\nfirst_beat\x18\x02 \x01(\x0b\x32\x14.mixxx.track.io.Beat*3\n\x06Source\x12\x0c\n\x08\x41NALYZER\x10\x00\x12\x11\n\rFILE_METADATA\x10\x01\x12\x08\n\x04USER\x10\x02\x42\x02H\x03')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'beats_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'H\003'
  _globals['_SOURCE']._serialized_start=341
  _globals['_SOURCE']._serialized_end=392
  _globals['_BEAT']._serialized_start=31
  _globals['_BEAT']._serialized_end=134
  _globals['_BPM']._serialized_start=136
  _globals['_BPM']._serialized_end=204
  _globals['_BEATMAP']._serialized_start=206
  _globals['_BEATMAP']._serialized_end=251
  _globals['_BEATGRID']._serialized_start=253
  _globals['_BEATGRID']._serialized_end=339
# @@protoc_insertion_point(module_scope)
